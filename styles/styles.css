:root {
  --green: #6aaa64;
  --yellow: #c9b458;
  --gray: #787c7e;
  --white: #ffffff;
  --black: #121212;
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

html,
body {
  height: 100%;
  font-family: Arial, Helvetica, sans-serif;
}

header {
  margin: 0.5rem;
}

.title {
  text-align: center;
}

.board-container {
  display: flex;
  justify-content: center;
}

.alert {
  text-align: center;
  font-weight: bold;
  height: 2rem;
  padding: 0.5rem;
}

.board {
  display: flex;
  flex-direction: column;
  padding: 10px;
}

.row {
  display: flex;
}

.square {
  display: flex;
  justify-content: center;
  align-items: center;
  border: 1px solid var(--gray);
  border-radius: 10px;
  min-width: 65px;
  min-height: 65px;
  font-size: 3rem;
  font-weight: bold;
  margin: 2.5px;
}

.keyboard-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

.keyboard-row {
  display: flex;
  justify-content: center;
  touch-action: manipulation;
}

.key-btn {
  border: 1px solid var(--gray);
  border-radius: 4px;
  font-weight: bold;
  margin: 0.1rem;
  padding: 0;
  height: 50px;
  width: 50px;
  cursor: pointer;
  transition: all 0.1s ease-in-out;
}

.key-btn:hover {
  transform: scale(1.4);
}

.keycap-pop {
  animation: keycap-pop linear;
  animation-duration: 0.3s;
}

@keyframes keycap-pop {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.4);
  }

  100% {
    transform: scale(1);
  }
}

.long-key-btn {
  width: 70px;
}

.green {
  background-color: var(--green);
}
.yellow {
  background-color: var(--yellow);
}

.gray {
  background-color: var(--gray);
}

.shake-x {
  animation: shake 0.82s cubic-bezier(0.36, 0.07, 0.19, 0.97) both;
  transform: translate3d(0, 0, 0);
  backface-visibility: hidden;
  perspective: 1000px;
}

@keyframes shake {
  10%,
  90% {
    transform: translate3d(-1px, 0, 0);
  }

  20%,
  80% {
    transform: translate3d(2px, 0, 0);
  }

  30%,
  50%,
  70% {
    transform: translate3d(-4px, 0, 0);
  }

  40%,
  60% {
    transform: translate3d(4px, 0, 0);
  }
}

.cell-fill-animation {
  animation: onTypeCell linear;
  animation-duration: 0.35s;
}

@keyframes onTypeCell {
  0% {
    transform: scale(1);
  }

  50% {
    transform: scale(1.15);
  }

  100% {
    transform: scale(1);
  }
}

.dancing-up {
  animation: dancing-up ease-in 0.5s infinite;
}

@keyframes dancing-up {
  0% {
    transform: translateY(0);
  }

  50% {
    transform: translateY(-10px);
  }

  100% {
    transform: translateY(0);
  }
}

.cell-reveal {
  animation-duration: 0.3s;
  animation-timing-function: linear;
  animation-fill-mode: backwards;
}
.cell-reveal.absent {
  animation-name: revealAbsentCharCell;
}
.cell-reveal.correct {
  animation-name: revealCorrectCharCell;
}
.cell-reveal.misplaced {
  animation-name: revealMisplacedCharCell;
}

@keyframes revealAbsentCharCell {
  0% {
    transform: rotateX(0deg);
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50% {
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50.1% {
    background-color: var(--absent-cell-bg-color);
    border-color: var(--absent-cell-bg-color);
  }
  100% {
    transform: rotateX(180deg);
  }
}

@keyframes revealCorrectCharCell {
  0% {
    transform: rotateX(0deg);
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50% {
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50.1% {
    background-color: var(--correct-cell-bg-color);
    border-color: var(--correct-cell-bg-color);
  }
  100% {
    transform: rotateX(180deg);
  }
}

@keyframes revealMisplacedCharCell {
  0% {
    transform: rotateX(0deg);
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50% {
    background-color: var(--default-cell-bg-color);
    border-color: var(--default-cell-border-color);
    color: var(--default-cell-text-color);
  }
  50.1% {
    background-color: var(--present-cell-bg-color);
    border-color: var(--present-cell-bg-color);
  }
  100% {
    transform: rotateX(180deg);
  }
}
/* Additional animation on the child div to avoid letters turning upside down/snapping back to upright visual glitch */
@keyframes offsetLetterFlip {
  0% {
    transform: rotateX(0deg);
  }
  100% {
    transform: rotateX(180deg);
  }
}
